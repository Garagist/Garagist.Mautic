prototype(Garagist.Mautic:Component.Form) < prototype(Neos.Fusion:Component) {
    @propTypes {
        id = ${PropTypes.integer}
        url = ${PropTypes.string}
        apiUrl = ${PropTypes.string}
        embedType = ${PropTypes.oneOf(['javascript', 'iframe', 'plain'])}
        iframeClass = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        waitMessage = ${PropTypes.string}
    }

    id = ${q(node).property('mauticFormId')}
    url = ${Configuration.Setting('Garagist.Mautic.publicUrl')}
    apiUrl = ${Configuration.Setting('Garagist.Mautic.api.baseUrl') || this.url}
    embedType = ${Configuration.Setting('Garagist.Mautic.embedType')}
    iframeClass = null
    waitMessage = ${Translation.translate('pleaseWait', 'Please waitâ€¦', [], 'Main', 'Garagist.Mautic')}

    @if.hasUrl_Id_EmbedType = ${this.url && this.id && this.embedType}

    renderer = afx`
        <script @if={props.embedType == "javascript"} type="text/javascript" src={props.url + "/form/generate.js?id=" + props.id} defer></script>
        <iframe @if={props.embedType == "iframe"} src={props.url + "/form/" + props.id} class={props.iframeClass}></iframe>
        <Neos.Fusion:Fragment @if={props.embedType == "plain"}>
            <script data-slipstream>{'window.MauticDomain="' + props.url + '";window.MauticLang={submittingMessage:"' + props.waitMessage + '"}'}</script>
            <script src={props.url + "/media/js/mautic-form.js"} data-slipstream defer onload="MauticSDK.onLoad()"></script>
            {File.readFile(props.apiUrl + "/form/embed/" + props.id)}
        </Neos.Fusion:Fragment>
    `
}
