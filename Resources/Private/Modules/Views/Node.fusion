Garagist.Mautic.BackendController.node = Neos.Fusion:Component {
    emails = ${emails}
    node = ${node}
    categoryNode = ${categoryNode}
    flashMessages = ${flashMessages}

    severityMapping = Neos.Fusion:DataStructure {
        OK = 'success'
        Notice = 'notice'
        Warning = 'warning'
        Error = 'error'
    }

    title = ${q(node).property('title')}
    titleOverride = ${q(node).property('titleOverride')}
    i18n = ${Translation.id('').package('Garagist.Mautic').source('Module')}
    categoryTitle = ${this.categoryNode ? q(this.categoryNode).property('title') : null}
    chooseSegment = ${Configuration.Setting('Garagist.Mautic.segment.choose')}
    segments = ${segments}
    prefilledSegments = ${prefilledSegments}
    lockPrefilledSegments = ${Configuration.Setting('Garagist.Mautic.segment.lockPrefilled')}
    showSegmentsOnCreate = ${Carbon.Array.check(this.chooseSegment) && Carbon.Array.check(this.segments)}

    createAction = Neos.Fusion:UriBuilder {
        action = 'create'
        arguments.node = ${node}
    }

    placeholder = ${this.titleOverride || this.title}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}
        _emails = Neos.Fusion:Map {
            items = ${props.emails}
            itemRenderer = Garagist.Mautic:Component.EmailData {
                node = ${props.node}
                email = ${item}
            }
        }

        renderer = afx`
            <main class="mautic">
                <Garagist.Mautic:Component.FlashMessages flashMessages={props.flashMessages} />
                <section class='mautic-list'>
                    <h1 class="text-2xl mb-4">
                        {props.i18n.id('newsletter.headline').translate()}{': '}
                        <Neos.Fusion:Link.Action
                            @if={props.categoryNode}
                            href.action="link"
                            href.arguments.node={props.categoryNode}
                            class="hover:!underline focus:!underline"
                            target="_blank"
                            content={props.categoryTitle}
                        />
                        {props.categoryNode ? ' › ' : ''}
                        <Neos.Fusion:Link.Action
                            href.action="link"
                            href.arguments.node={props.node}
                            class="hover:!underline focus:!underline"
                            target="_blank"
                            content={props.title}
                        />
                    </h1>
                    <table class='neos-table' x-data x-tooltips>
                        <thead>
                            <tr>
                                <td>{props.i18n.id('status').translate()}</td>
                                <td>{props.i18n.id('subject').translate()}</td>
                                <td>{props.i18n.id('createdOn').translate()}</td>
                                <td>{props.i18n.id('sentOn').translate()}</td>
                                <td>{props.i18n.id('recipients').translate()}</td>
                                <td class="!text-right">{props.i18n.id('actions').translate()}</td>
                            </tr>
                        </thead>
                        <tbody>
                        <Neos.Fusion:Loop items={props._emails}>
                            <tr>
                                <td width="1%" class="!text-center whitespace-nowrap">
                                    <span
                                        @if={item.isFailed}
                                        class="inline-block"
                                        aria-label={props.i18n.id('task.failed').translate()}
                                    >
                                        <i class="fas fa-exclamation-triangle text-red-500"></i>
                                    </span>
                                    <i @if={!item.isFailed} class="fas fa-check text-green-600"></i>
                                </td>
                                <td width="1%" class={["whitespace-nowrap !p-0", item.subject ? null : '!text-center']}>
                                    <Neos.Fusion:Link.Action
                                        @if={item.subject}
                                        class="neos-button neos-button-primary block text-left"
                                        href.action="detail"
                                        href.arguments={item.hrefArguments}
                                        aria-label={'ID: ' + item.emailIdentifier}
                                    >
                                        {item.subject}
                                    </Neos.Fusion:Link.Action>
                                    {item.subject ? '' : '–'}
                                </td>
                                <td>{item.dateCreated}</td>
                                <td>{item.dateSent}</td>
                                <td>{item.properties ? item.properties.recipients : ''}</td>
                                <td class="neos-action">
                                    <div
                                        x-data={"actions(" + (item.properties ? "2" : "1") + ")"}
                                        class="neos-pull-right"
                                    >
                                        <Garagist.Mautic:Component.EmailActionButtons {...item} />
                                        <Neos.Fusion:Link.Action
                                            @if={item.properties}
                                            class="neos-button neos-button-primary"
                                            href.action="detail"
                                            href.arguments={item.hrefArguments}
                                            aria-label={props.i18n.id('email.detail').translate()}
                                        >
                                            <i class="fas fa-info icon-white"></i>
                                        </Neos.Fusion:Link.Action>
                                    </div>
                                </td>
                            </tr>
                        </Neos.Fusion:Loop>
                        </tbody>
                    </table>
                </section>
            </main>
            <div class="neos-footer">
                <button
                    href="#create"
                    data-toggle="modal"
                    class="neos-button neos-button-primary"
                >
                    {props.i18n.id('email.create').translate()}
                </button>
                <Neos.Fusion:Link.Action
                    class="neos-button neos-button-secondary"
                    href.action="node"
                    href.arguments.node={props.node}
                >
                    {props.i18n.id('list.refresh')}
                </Neos.Fusion:Link.Action>
            </div>
            <div class="neos-hide mautic" id="create">
                <div class="neos-modal-centered">
                    <div
                        x-data={"{action:'" + props.createAction + "', subject:'', segments:" + Json.stringify(props.prefilledSegments) + "}"}
                        class="neos-modal-content"
                    >
                        <div class="neos-modal-header">
                            <button
                                data-dismiss="modal"
                                type="button"
                                class="neos-close neos-button"
                            ></button>
                            <div class="neos-header">
                                {props.i18n.id('email.create').translate()}
                            </div>

                            <fieldset class="mx-4">
                                <label for="subject">{props.i18n.id('subject').translate()}</label>
                                <input
                                    type="text"
                                    x-model="subject"
                                    id="subject"
                                    placeholder={props.placeholder}
                                    class="block w-full"
                                />
                            </fieldset>
                            <fieldset
                                @if={props.showSegmentsOnCreate}
                                class="mx-4"
                            >
                                <legend class="!p-0 !leading-5 !text-sm">
                                    {props.i18n.id('recipients').translate()}
                                </legend>
                                <Neos.Fusion:Loop items={props.chooseSegment}>
                                    <label class={[props.lockPrefilledSegments && Array.indexOf(props.prefilledSegments, item) != -1 ? "pointer-events-none" : null, "neos-checkbox !block mt-2 cursor-pointer"]}>
                                        <input
                                            x-model="segments"
                                            value={item}
                                            type="checkbox"
                                        />
                                        <span></span>
                                        {segments[item].name}
                                    </label>
                                </Neos.Fusion:Loop>
                                <div x-show="!segments.length" x-transition class="neos-button neos-button-danger my-2 w-full">
                                    {props.i18n.id('pleaseChooseMinimalOneItem').translate()}
                                </div>
                            </fieldset>
                        </div>
                        <div class="neos-modal-footer">
                            <button
                                data-dismiss="modal"
                                type="button"
                                class="neos-button"
                            >
                                {Translation.translate('cancel', null, [], 'Main', 'Neos.Neos')}
                            </button>
                            <a
                                :href="action + '&moduleArguments[subject]=' + subject + '&moduleArguments[segments]=' + segments"
                                :disabled={props.showSegmentsOnCreate ? "!segments.length" : null}
                                :class={props.showSegmentsOnCreate ? "!segments.length&&'pointer-events-none'" : null}
                                class="neos-button neos-button-primary"
                            >
                                {props.i18n.id('email.create').translate()}
                            </a>
                        </div>
                    </div>
                </div>
                <div class="neos-modal-backdrop neos-in"></div>
            </div>
        `
    }
}
