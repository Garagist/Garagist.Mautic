prototype(Garagist.Mautic:Backend.Block.FlashMessages) < prototype(Neos.Fusion:Tag) {
    @if.hasMessages = ${Carbon.Array.check(flashMessages)}

    attributes {
        id = 'neos-notification-container'
        class = 'neos-notification-top'
    }

    content = Neos.Fusion:Loop {
        items = ${flashMessages}
        itemRenderer = Neos.Fusion:Component {
            severity = ${String.toLowerCase(item.severity)}
            severity.@process {
                replaceOKStatus = ${value == 'ok' ? 'success' : value}
                replaceNoticeStatus = ${value == 'notice' ? 'info' : value}
            }

            title = ${item.title ? Translation.translate(item.title, item.title, item.arguments, 'Module', 'Garagist.Mautic') : null}
            message = ${item.message ? Translation.translate(item.message, item.message, item.arguments, 'Module', 'Garagist.Mautic') : null}
            renderer = afx`
                <div
                    x-data="{expanded:false}"
                    class={'neos-notification neos-notification-' + props.severity}
                >
                    <div
                        :class="expanded&&'expanded'"
                        class={['neos-notification-content', props.message ? 'expandable' : null]}
                    >
                        <i class={'fas fa-' + props.severity}></i>
                        <div
                            @if={props.title && !props.message}
                            class="neos-notification-heading"
                        >
                            {props.title}
                        </div>
                        <button
                            @if={props.title && props.message}
                            x-on:click="expanded=!expanded"
                            type="button"
                            class="neos-notification-heading text-left"
                        >
                            {props.title}
                        </button>
                        <div
                            @if={props.message}
                            class="neos-expand-content"
                        >
                            {props.message}
                        </div>
                    </div>
                </div>
            `
        }
    }
}
