Garagist.Mautic.BackendController.email = Neos.Fusion:Component {

    emails = ${emails}
    node = ${node}
    flashMessages = ${flashMessages}

    severityMapping = Neos.Fusion:DataStructure {
        OK = 'success'
        Notice = 'notice'
        Warning = 'warning'
        Error = 'error'
    }

    title = ${q(node).property('title')}
    i18n = ${Translation.id('').package('Garagist.Mautic').source('Module')}

    renderer = afx`
        <main class="mautic">
            <Neos.Fusion:Loop items={props.flashMessages} itemName="flashMessage">
                <div class={'neos-tooltip neos-bottom neos-in neos-tooltip-' + props.severityMapping[flashMessage.severity]}>
                    <script @if.error={flashMessage.severity == 'Error'}>
                        {"document.querySelector('fieldset').classList.add('effect--shake');"}
                    </script>
                    <div class="neos-tooltip-arrow"></div>
                    <div class="neos-tooltip-inner" role="alert">
                        {flashMessage}
                        <!-- {I18n.id('flashMessage.' + flashMessage.code).value(flashMessage).package('Neos.Neos').source('Main')}-->
                    </div>
                </div>
            </Neos.Fusion:Loop>
            <section class='mautic-list'>
                <h2 class="text-xl font-bold mb-4">
                    {props.i18n.id('emails.headline').arguments([props.title]).translate()}
                </h2>
                <table class='neos-table'>
                    <thead>
                        <tr>
                            <td>{props.i18n.id('email.createdOn').translate()}</td>
                            <td>{props.i18n.id('email.identifier').translate()}</td>
                            <td>{props.i18n.id('email.sentOn').translate()}</td>
                            <td class="!text-right">{props.i18n.id('email.actions').translate()}</td>
                        </tr>
                    </thead>
                    <tbody>
                    <Neos.Fusion:Loop items={props.emails}>
                        <tr>
                            <td>{Date.format(item.dateCreated, 'd.m.Y h:m:s')}</td>
                            <td>{item.emailIdentifier}</td>
                            <td>{item.dateSent ? Date.format(item.dateSent, 'd.m.Y h:m:s') : 'â€“'}</td>
                            <td @if.idel={item.task == 'idle'}>
                                <div class="neos-pull-right">
                                    <Neos.Fusion:Link.Action @if.unpublished={item.dateModified != null && item.dateSend == null && !item.published} class="neos-button neos-button-primary" href.action="publish" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-upload"></i>
                                    </Neos.Fusion:Link.Action>
                                    <Neos.Fusion:Link.Action @if.published={item.dateSent == null && item.published} class="neos-button neos-button-primary" href.action="unPublish" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-download"></i>
                                    </Neos.Fusion:Link.Action>
                                    <Neos.Fusion:Link.Action @if.published={item.dateSent == null && item.published} class="neos-button neos-button-primary" href.action="send" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-play"></i>
                                    </Neos.Fusion:Link.Action>
                                    <Neos.Fusion:Link.Action @if.published={item.dateSent == null && !item.published} class="neos-button neos-button-primary" href.action="update" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-sync icon-white"></i>
                                    </Neos.Fusion:Link.Action>
                                    <Neos.Fusion:Link.Action class="neos-button neos-button-primary" href.action="info" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-info icon-white"></i>
                                    </Neos.Fusion:Link.Action>
                                </div>
                            </td>
                            <td @if.running={item.task != 'idle' && item.task != 'failed'}>
                                <div class="neos-pull-right">
                                    {props.i18n.id('email.task.running').arguments([item.task]).translate()}
                                    <Neos.Fusion:Link.Action class="neos-button neos-button-primary" href.action="info" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-info icon-white"></i>
                                    </Neos.Fusion:Link.Action>
                                </div>
                            </td>
                            <td @if.running={item.task == 'failed'}>
                                <div class="neos-pull-right">
                                    {props.i18n.id('email.task.failed').translate()}
                                    <Neos.Fusion:Link.Action class="neos-button neos-button-primary" href.action="info" href.arguments.node={props.node} href.arguments.email={item} >
                                        <i class="fas fa-info icon-white"></i>
                                    </Neos.Fusion:Link.Action>
                                </div>
                            </td>
                        </tr>
                    </Neos.Fusion:Loop>
                    </tbody>
                </table>
            </section>
        </main>
        <div class="neos-footer">
            <Neos.Fusion:Link.Action class="neos-button neos-button-primary" href.action="create" href.arguments.node={props.node} href.arguments.email={item} >
                {props.i18n.id('email.action.create').translate()}
            </Neos.Fusion:Link.Action>
            <Neos.Fusion:Link.Action class="neos-button neos-button-secondary" href.action="email" href.arguments.node={props.node} href.arguments.email={item} >
                {props.i18n.id('email.action.refresh')}
            </Neos.Fusion:Link.Action>
        </div>
    `
}
