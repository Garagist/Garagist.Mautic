prototype(Garagist.Mautic:Component.EmailActionButtons) < prototype(Neos.Fusion:Component) {
    action = ${Configuration.Setting('Garagist.Mautic.action')}
    detailView = false

    @private {
        buttonClass = 'whitespace-nowrap neos-button !bg-neos-gray-medium '
        default = 'hover:!bg-neos-blue focus:!bg-neos-blue'
        canResend = ${props.action.resend && props.canResend}
        actions = Neos.Fusion:DataStructure {
            @if.ping = ${ping}
            @process.filter = ${Array.filter(value)}
            mailProperties = afx`
                <Garagist.Mautic:Component.MailProperties
                    @if={props.action.edit && props.canEdit}
                    subject={props.subject}
                    previewText={props.previewText}
                    segments={props.segments}
                    class={private.buttonClass + private.default}
                    detailView={props.detailView}
                    {...props.hrefArguments}
                />
            `
            sendTestMail = afx`
                <Garagist.Mautic:Component.SendTestMail
                    @if={props.action.test}
                    @if={props.canTest || private.canResend}
                    detailView={props.detailView}
                    {...props.hrefArguments}
                />
            `
            update = Neos.Fusion:DataStructure {
                @if.set = ${props.action.update && props.canUpdate}
                labelKey = 'email.update'
                action = 'update'
                icon = 'fa-sync'
                type = 'warning'
            }
            publish = Neos.Fusion:DataStructure {
                @if.set = ${props.action.publish && props.canPublish}
                labelKey = 'email.publish'
                action = 'publish'
                icon = 'fa-upload'
            }
            send = afx`
                <Garagist.Mautic:Component.SendMail
                    @if={(props.action.send && props.canSend) || private.canResend}
                    action='send'
                    resend={props.canResend}
                    detailView={props.detailView}
                    segments={props.segments}
                    {...props.hrefArguments}
                />
            `
            unpublish = Neos.Fusion:DataStructure {
                @if.set = ${props.action.unpublish && props.canUnpublish}
                labelKey = 'email.unpublish'
                action = 'unpublish'
                icon = 'fa-download'
            }
            publishAndSend = afx`
                <Garagist.Mautic:Component.SendMail
                    @if={props.action.publishAndSend && props.canPublishAndSend}
                    action='publishAndSend'
                    detailView={props.detailView}
                    segments={props.segments}
                    {...props.hrefArguments}
                />
            `
            unpublishAndUpdate = Neos.Fusion:DataStructure {
                @if.set = ${props.action.unpublishAndUpdate && props.canUnpublishAndUpdate}
                labelKey = 'email.update'
                action = 'unpublishAndUpdate'
                icon = 'fa-sync'
            }
            unlock =  Neos.Fusion:DataStructure {
                @if.set = ${props.isFailed}
                labelKey = 'task.unlock'
                action = 'unlock'
                type = 'warning'
                icon = 'fa-unlock'
            }
            delete = Neos.Fusion:DataStructure {
                @if.set = ${props.action.delete && props.canDelete}
                labelKey = 'email.delete'
                action = 'delete'
                icon = 'fa-trash'
                type = 'danger'
                confirm = true
            }
        }
    }

    renderer = afx`
        <Neos.Fusion:Loop items={private.actions}>
            {Type.isString(item) ? item : ''}
            <Garagist.Mautic:Component.ActionButton
                @if={!Type.isString(item)}
                showText={props.detailView}
                actionArguments={props.hrefArguments}
                {...item}
            />
        </Neos.Fusion:Loop>
    `
}
